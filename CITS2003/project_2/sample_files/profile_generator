#!/bin/bash
#Author: Connor Harris 23208009
#   This is a shell script designed to analyse a text, and depending on the argument return:
#   -A profile of the author. This profile counts conjunctions, simple/compound words, posessives, contractions, punctuation, and sentences.
#       OR
#   -Create two profiles of two different files, with an average frequency per thousand words and blah blah blah fix this todo
#TODO
#
word_array=("also", "although", "and", "as", "because", "before", "but", "for", "if", "nor", "of", "or", "since", "that", "though", "until", "when", "whenever", "whereas", "which", "while", "yet")
cat $1 | tr '\n' ' ' | sed 's/[.!?]  */&\n/g' >> sentence_as_line.txt
sentences=$(cat sentence_as_line.txt | wc -l)
commas=$(cat sentence_as_line.txt | grep -o ',' | wc -l)
semicolons=$(cat sentence_as_line.txt | grep -o ';' | wc -l)
cat sentence_as_line.txt | tr '\n' ' ' | sed 's/[.!?]  */&\n/g' | tr -d ',;:.' | tr [:upper:] [:lower:] | tr ' ' '\n' | sed -r '/^\s*$/d' >> word_as_line.txt
total_words=$(cat word_as_line.txt | wc -l)
compound_words=$(cat word_as_line.txt | grep '-' | sed -n '/--/!p' | wc -l)
contractions=$(cat word_as_line.txt | grep -e "'" | grep -v '^[[:punct:]]' | grep -v "'s" | wc -l)
echo "sentence" $sentences $'\n' "comma" $commas $'\n' "semi_colon" $semicolons $'\n' "word" $total_words $'\n' "compound_word" $compound_words $'\n' "contraction" $contractions | sed -e 's/^[ \t]*//' >> output.txt

let count=1
while [[ $count -lt $(($total_words+1)) ]] 
do
    current_word=$(head -n $count word_as_line.txt | tail -n 1)

    #i starts at 0, increments by 1, limit is 22
    for ((i = 0 ; i < 22 ; i++)); do 
        array_word=$(echo "${word_array[i]}" | tr -d ',')
        if [[ "$current_word" == "$array_word" ]]; then
            echo $current_word >> conjunctions_list.txt
        fi
    done

    count=$(($count+1)) #add another to the index to continue
done

for ((i = 0 ; i < 22 ; i++)); do 
    x=$(echo "${word_array[i]}" | tr -d ',')
    y=$(grep $x conjunctions_list.txt)
    if [[ -z $y ]]; then
        echo $x " 0" >> output.txt
    fi
done

cat conjunctions_list.txt | sort | uniq -c | sort -nr | sed -e 's/^[ \t]*//' | awk '{print $2 " " $1}' >> output.txt
cat output.txt | sort

rm sentence_as_line.txt | rm output.txt | rm word_as_line.txt | rm conjunctions_list.txt
