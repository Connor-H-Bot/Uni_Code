#!/bin/bash
#Author: Connor Harris 23208009
#
#   This is a shell script designed to analyse a text, and creates a profile of the author.
#   -The profile outputs: Conjunctions count (from predetermined list), overall word count, compound words, contractions, commas, semi colons, and sentences. 
#
#   This script will only be called by the overarching "style_cmp" file, so there isn't 
#   any user input checks required

#Predetermined conjunctions list
word_array=("also", "although", "and", "as", "because", "before", "but", "for", "if", "nor", "of", "or", "since", "that", "though", "until", "when", "whenever", "whereas", "which", "while", "yet")
#Length of word array (not totally necessary, but helps with program scalability)
array_length=$(echo "${#word_array[@]}")
#Gets the argument file, turns each sentence into its own line, and outputs that to a file for further analysis
cat $1 | tr '\n' ' ' | sed 's/[.!?]  */&\n/g' >> sentence_as_line.txt
sentences=$(cat sentence_as_line.txt | wc -l) #Sentence count
commas=$(cat sentence_as_line.txt | grep -o ',' | wc -l) #Comma count
semicolons=$(cat sentence_as_line.txt | grep -o ';' | wc -l) #Semicolons
#Turns each word into its own line, makes everything lowercase, removes non alphabetic characters (unless its a part of the word), and outputs to a new file
cat sentence_as_line.txt | tr '\n' ' ' | sed 's/[.!?]  */&\n/g' | tr -d ',;:.' | tr [:upper:] [:lower:] | tr ' ' '\n' | sed -r '/^\s*$/d' >> word_as_line.txt
total_words=$(cat word_as_line.txt | wc -l) #Word count
compound_words=$(cat word_as_line.txt | grep '-' | sed -n '/--/!p' | wc -l) #Compound word count
contractions=$(cat word_as_line.txt | grep "[a-z]'[a-z]" | grep -v '^[[:digit:]]' | grep -v "'s" | grep -v "' " | wc -l) #Contractions count
#Puts the variable numbers and their type into a new file, with one type on each line. Sed removes non needed blank space
echo "sentence:" $sentences $'\n' "comma:" $commas $'\n' "semi_colon:" $semicolons $'\n' "word:" $total_words $'\n' "compound_word:" $compound_words $'\n' "contraction:" $contractions | sed -e 's/^[ \t]*//' | tr -d ' ' >> output.txt

#Loops through conjunctions array, and counts each occurence within the edited version of the argument file.
for ((i = 0; i < $array_length; i++)); do
    array_word=$(echo "${word_array[i]}" | tr -d ',') #get the current conjunction from the array
    match_number=$(cat word_as_line.txt | grep -w "$array_word" | wc -l | sed 's/ //g') #Grep the conjunction and return its instance count
    echo $array_word":"$match_number >> output.txt #Output these to the folder with other counts
done

#Print to standard output, remove duplicates, and sort by alphabetical
cat output.txt | sort -u

#Delete instance files
rm sentence_as_line.txt | rm output.txt | rm word_as_line.txt 

#Graceful exit
exit 0