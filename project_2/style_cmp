#!/bin/bash
#Author: Connor Harris 23208009
#
#   This script is designed to check the test inputs, and depending on the arguments:
#   1 ARG: Return a profile counting certain words
#   2 ARGS: Create a profile for each text, and return a Euclidian measurement. 
#

#   =   =   =   =   =   =   = Accepted inputs =     =   =   =   =   =   #

#If argument 2 empty: if arg 1 exists
if [[ -z $2 && -s $1 ]]; then
    source profile_generator $1
    exit 0
fi

#two arguments, (ensuring there's no third) so the euclidian distance is required
if [[ -s $1 && -s $2 && -z $3 ]]; then
    profile_1=$(source profile_generator $1) 
    profile_2=$(source profile_generator $2) 
    source euc_cal $profile1 $profile2
    echo $profile_1  
    exit 0
fi

#   =   =   =   =   =   =   = Error handling =  =   =   =   =   =   #

#One argument, but doesnt exist
if [[ -z $2 && ! -s $1 ]]; then
    echo 
    echo "Error:" "$1" "does not exist. If it's in another directory, please specify /path/to/desired_file.txt"
    echo 
    exit 1
fi
#Two arguments, first is invalid and second is valid
if [[ -s $2 && ! -s $1 ]]; then
    echo 
    echo "Error:" "$1" "does not exist. If it's in another directory, please specify /path/to/desired_file.txt"
    echo "However," "$2" "(argument 2) was valid"
    echo 
    exit 1
fi
#Two arguments, first is valid and second is invalid
if [[ ! -s $2 && -s $1 ]]; then
    echo 
    echo "Error:" "$2" "does not exist. If it's in another directory, please specify /path/to/desired_file.txt"
    echo "However," "$1" "(argument 1) was valid"
    echo 
    exit 1
fi
#Two valid arguments, but at least one extra
if [[ -s $1 && -s $2 && ! -z $3 ]]; then
    echo
    echo "Error: Three or more arguments specified. Please specify one or two arguments. "
    echo
    exit 1
fi
#No specified files
if [[ ! -s $2 && ! -s $1 ]]; then
    echo 
    echo "Error: One or more invalid arguments"
    echo "To use this script, put one argument in to create a profile of the author"
    echo "or two arguments to find the euclidian distance between two texts. "
    echo 
    exit 1
fi
#For any error states I couldn't think of
else 
    echo "An unspecified error occurred"
    exit 1
fi